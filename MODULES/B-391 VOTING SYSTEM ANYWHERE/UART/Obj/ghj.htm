<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\ghj.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\ghj.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sun Apr 12 08:41:41 2015
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; FINGER_ENROL &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ded658]">Reset_Handler</a>
 <LI><a href="#[ded8b0]">Undef_Handler</a>
 <LI><a href="#[ded874]">SWI_Handler</a>
 <LI><a href="#[ded838]">PAbt_Handler</a>
 <LI><a href="#[ded7fc]">DAbt_Handler</a>
 <LI><a href="#[ded7c0]">IRQ_Handler</a>
 <LI><a href="#[ded784]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[ded8b0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded8b0]">Undef_Handler</a><BR>
 <LI><a href="#[ded874]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded874]">SWI_Handler</a><BR>
 <LI><a href="#[ded838]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded838]">PAbt_Handler</a><BR>
 <LI><a href="#[ded7fc]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded7fc]">DAbt_Handler</a><BR>
 <LI><a href="#[ded7c0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded7c0]">IRQ_Handler</a><BR>
 <LI><a href="#[ded784]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ded784]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[ded658]">Reset_Handler</a>
 <LI><a href="#[ded8b0]">Undef_Handler</a>
 <LI><a href="#[ded874]">SWI_Handler</a>
 <LI><a href="#[ded838]">PAbt_Handler</a>
 <LI><a href="#[ded7fc]">DAbt_Handler</a>
 <LI><a href="#[ded7c0]">IRQ_Handler</a>
 <LI><a href="#[ded784]">FIQ_Handler</a>
 <LI><a href="#[de9a94]">__main</a>
 <LI><a href="#[dec140]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ded658]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[de9a94]"></a>__main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[de9788]"></a>_main_stk</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[de9698]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[de9440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[de965c]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[de9440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[de956c]"></a>_main_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[dec35c]"></a>init_key</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uarttest.o(.text), UNUSED)

<P><STRONG><a name="[dec320]"></a>scan_row</STRONG> (ARM, 376 bytes, Stack size 0 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dec230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row1
<LI><a href="#[dec26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row2
<LI><a href="#[dec2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row3
<LI><a href="#[dec2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row4
</UL>

<P><STRONG><a name="[dec2e4]"></a>scan_row4</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[dec320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row
</UL>
<BR>[Called By]<UL><LI><a href="#[dec1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_key
</UL>

<P><STRONG><a name="[dec2a8]"></a>scan_row3</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[dec320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row
</UL>
<BR>[Called By]<UL><LI><a href="#[dec1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_key
</UL>

<P><STRONG><a name="[dec26c]"></a>scan_row2</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[dec320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row
</UL>
<BR>[Called By]<UL><LI><a href="#[dec1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_key
</UL>

<P><STRONG><a name="[dec230]"></a>scan_row1</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[dec320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row
</UL>
<BR>[Called By]<UL><LI><a href="#[dec1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_key
</UL>

<P><STRONG><a name="[dec1f4]"></a>scan_key</STRONG> (ARM, 32 bytes, Stack size 8 bytes, uarttest.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dec230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row1
<LI><a href="#[dec26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row2
<LI><a href="#[dec2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row3
<LI><a href="#[dec2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row4
</UL>

<P><STRONG><a name="[dec1b8]"></a>FINGER_SCAN</STRONG> (ARM, 816 bytes, Stack size 16 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FINGER_SCAN &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[debf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
<LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dec17c]"></a>FINGER_ENROL</STRONG> (ARM, 1028 bytes, Stack size 16 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FINGER_ENROL &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[debf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
<LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dec140]"></a>main</STRONG> (ARM, 148 bytes, Stack size 16 bytes, uarttest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; FINGER_ENROL &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[debee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[debfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[dec014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
<LI><a href="#[dec050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[dec08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[dec17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_ENROL
<LI><a href="#[dec1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_SCAN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[deb8d0]"></a>UART0Handler</STRONG> (ARM, 384 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[deb894]"></a>UART1Handler</STRONG> (ARM, 384 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[dec08c]"></a>UARTInit</STRONG> (ARM, 296 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UARTInit &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[deb81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[deb858]"></a>UARTSend</STRONG> (ARM, 172 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[deb2f4]"></a>DefaultVICHandler</STRONG> (ARM, 20 bytes, Stack size 8 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[dec014]"></a>init_VIC</STRONG> (ARM, 92 bytes, Stack size 0 bytes, irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[deb81c]"></a>install_irq</STRONG> (ARM, 132 bytes, Stack size 12 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[dec08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[deb2b8]"></a>uninstall_irq</STRONG> (ARM, 144 bytes, Stack size 8 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[deaf34]"></a>delay1</STRONG> (ARM, 52 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[deadcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_write
<LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>

<P><STRONG><a name="[deaef8]"></a>Msdelay</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[deaebc]"></a>del</STRONG> (ARM, 40 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[debf9c]"></a>lcd_command_write</STRONG> (ARM, 216 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[deaf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[dead54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_cmd
<LI><a href="#[deae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gotoxy
<LI><a href="#[deae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dec17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_ENROL
<LI><a href="#[dec1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_SCAN
</UL>

<P><STRONG><a name="[deae80]"></a>set_lcd_port_output</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[deae44]"></a>lcd_clear</STRONG> (ARM, 16 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_clear &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>
<BR>[Called By]<UL><LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[deae08]"></a>lcd_gotoxy</STRONG> (ARM, 92 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_gotoxy &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>
<BR>[Called By]<UL><LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[deadcc]"></a>lcd_data_write</STRONG> (ARM, 164 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[deaf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
</UL>
<BR>[Called By]<UL><LI><a href="#[dead90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putchar
</UL>

<P><STRONG><a name="[dead90]"></a>lcd_putchar</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_putchar &rArr; lcd_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[deadcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[debf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[debf60]"></a>lcd_putstring</STRONG> (ARM, 156 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write
</UL>
<BR>[Calls]<UL><LI><a href="#[dead90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putchar
<LI><a href="#[deae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gotoxy
<LI><a href="#[deae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dec17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_ENROL
<LI><a href="#[dec1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_SCAN
</UL>

<P><STRONG><a name="[debfd8]"></a>init_lcd</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dead54]"></a>test_cmd</STRONG> (ARM, 40 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[debf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>

<P><STRONG><a name="[dec050]"></a>delay</STRONG> (ARM, 56 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dec17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_ENROL
<LI><a href="#[dec1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_SCAN
<LI><a href="#[dec230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row1
<LI><a href="#[dec26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row2
<LI><a href="#[dec2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row3
<LI><a href="#[dec2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_row4
</UL>

<P><STRONG><a name="[dea598]"></a>sendchar</STRONG> (ARM, 80 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)

<P><STRONG><a name="[dea55c]"></a>uart0_getkey</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)

<P><STRONG><a name="[dea520]"></a>uart1_getkey</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)

<P><STRONG><a name="[debee8]"></a>uart1_init</STRONG> (ARM, 52 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dec140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dea4e4]"></a>uart1_putc</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dea4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_puts
</UL>

<P><STRONG><a name="[dea4a8]"></a>uart1_puts</STRONG> (ARM, 36 bytes, Stack size 4 bytes, serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dea4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_putc
</UL>

<P><STRONG><a name="[dea46c]"></a>uart0_init</STRONG> (ARM, 44 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)

<P><STRONG><a name="[debf24]"></a>uart0_putc</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dea430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
<LI><a href="#[dec17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_ENROL
<LI><a href="#[dec1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FINGER_SCAN
</UL>

<P><STRONG><a name="[dea430]"></a>uart0_puts</STRONG> (ARM, 36 bytes, Stack size 4 bytes, serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[debf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
</UL>

<P><STRONG><a name="[de9440]"></a>__scatterload</STRONG> (ARM, 40 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[de965c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[de9698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[de9404]"></a>__scatterload_rt2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[de9044]"></a>__scatterload_copy</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de9044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[de9044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[de9008]"></a>__scatterload_null</STRONG> (ARM, 4 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[de8fcc]"></a>__scatterload_zeroinit</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ded8b0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ded874]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ded838]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ded7fc]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ded7c0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ded784]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[ded784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ded784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
